[{"C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\components\\Header.js":"1","C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\App.js":"2","C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\index.js":"3","C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\pages\\Dashboard.js":"4","C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\pages\\Charts.js":"5","C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\pages\\Tables.js":"6","C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\pages\\StaticNavigation.js":"7","C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\components\\Footer.js":"8","C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\pages\\Authentication.js":"9","C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\pages\\LightSidenav.js":"10","C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\pages\\Error.js":"11","C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\pages\\Error401.js":"12","C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\pages\\Error500.js":"13","C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\pages\\Error404.js":"14","C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\pages\\ForgotPassword.js":"15","C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\pages\\Login.js":"16","C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\pages\\Register.js":"17","C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\components\\AreaChart.js":"18","C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\components\\BarCharts.js":"19","C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\components\\DataTable.js":"20","C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\components\\PieChart.js":"21","C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\components\\Grid.js":"22","C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\pages\\GridPage.js":"23","C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\realgrid-data.js":"24"},{"size":18497,"mtime":1609918453558,"results":"25","hashOfConfig":"26"},{"size":3316,"mtime":1609919933122,"results":"27","hashOfConfig":"26"},{"size":280,"mtime":1609924009502,"results":"28","hashOfConfig":"26"},{"size":5857,"mtime":1610438881944,"results":"29","hashOfConfig":"26"},{"size":3153,"mtime":1609736747999,"results":"30","hashOfConfig":"26"},{"size":2949,"mtime":1609916067138,"results":"31","hashOfConfig":"26"},{"size":6246,"mtime":1609916098454,"results":"32","hashOfConfig":"26"},{"size":1140,"mtime":1609391770091,"results":"33","hashOfConfig":"26"},{"size":1019,"mtime":1609311248405,"results":"34","hashOfConfig":"26"},{"size":6235,"mtime":1609733829563,"results":"35","hashOfConfig":"26"},{"size":962,"mtime":1609310508996,"results":"36","hashOfConfig":"26"},{"size":1494,"mtime":1609389474771,"results":"37","hashOfConfig":"26"},{"size":1447,"mtime":1609389940775,"results":"38","hashOfConfig":"26"},{"size":1524,"mtime":1609389804351,"results":"39","hashOfConfig":"26"},{"size":3396,"mtime":1609719605583,"results":"40","hashOfConfig":"26"},{"size":3364,"mtime":1610438734201,"results":"41","hashOfConfig":"26"},{"size":5021,"mtime":1609719851647,"results":"42","hashOfConfig":"26"},{"size":2236,"mtime":1610527772143,"results":"43","hashOfConfig":"26"},{"size":1988,"mtime":1610583095636,"results":"44","hashOfConfig":"26"},{"size":2929,"mtime":1610438979309,"results":"45","hashOfConfig":"26"},{"size":1377,"mtime":1610587258447,"results":"46","hashOfConfig":"26"},{"size":7587,"mtime":1610528889378,"results":"47","hashOfConfig":"26"},{"size":1020,"mtime":1610437422337,"results":"48","hashOfConfig":"26"},{"size":6636,"mtime":1610437953288,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},"14n6kwo",{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"67"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"67"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\components\\Header.js",["118","119","120","121","122","123","124"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { Avatar, Box, Drawer, Icon, IconButton, InputBase, List,ListItem,ListItemIcon,ListItemText, makeStyles, Menu, MenuItem, Typography } from '@material-ui/core';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport TableChartIcon from '@material-ui/icons/TableChart';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport clsx from 'clsx';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport Charts from '../pages/Charts';\r\nimport Dashboard from '../pages/Dashboard';\r\nimport {HandleDrawerContext, lightDrawerContext, OpenContext,} from '../App';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Authentication from '../pages/Authentication';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({          //내부스타일 적용\r\n    menuButton : {                                  //메뉴 열고 닫는 버튼\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: \"15px\",\r\n        color: \"#676b70\",\r\n    },\r\n    barStyles : {                                   //최상단 앱바 \r\n        backgroundColor: \"#343a40\",\r\n        \r\n        zIndex:1, //drawer와 겹치기때문에 zindex 적용\r\n        // transition: theme.transitions.create(['margin','width'],{\r\n        //     easing: theme.transitions.easing.sharp,\r\n        //     duration: theme.transitions.duration.leavingScreen,\r\n        // }),\r\n    },\r\n    // appBarShift: {                               //appBar 밀리는 효과.\r\n    //     width: `calc(100%- ${drawerWidth}px)`,\r\n    //     marginLeft: drawerWidth,\r\n    //     transition: theme.transitions.create(['margin','width'], {\r\n    //         easing: theme.transitions.easing.easeOut,\r\n    //         duration: theme.transitions.duration.enteringScreen,\r\n    //     }),\r\n    // },\r\n    content : {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    contentShift: {\r\n        width: `calc(100%-${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin','width'], {\r\n                    easing: theme.transitions.easing.easeOut,\r\n                    duration: theme.transitions.duration.enteringScreen,\r\n                }),\r\n    },\r\n    searchBox : {                                   //검색바\r\n       backgroundColor:\"white\",\r\n       marginLeft:\"auto\",\r\n       borderRadius: theme.shape.borderRadius,\r\n       \r\n    },\r\n    searchIcon : {                                  //검색바 돋보기 아이콘상자\r\n        backgroundColor:\"#0d82f7\",\r\n        width:\"20%\",\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        display: 'flex',\r\n        pointerEvents: 'none',\r\n        height:'30px',\r\n        paddingTop: '3px',\r\n        borderRadius: '0px 4px 4px 0px',\r\n        \r\n\r\n    },\r\n    drawer: {                                       //사이드바\r\n        \r\n        flexShrink: 0,\r\n        \r\n    },\r\n    drawerPaper: {                                  //사이드바에 실질적으로 내용이 나오는 부분(높이랑 top을 지정해둔 것은 앱바와 겹치지 않기 위해서)\r\n        width: drawerWidth,\r\n        top: '63px',                                //기본적으로 drawer는 높이가 화면을 다 차지하기 때문에 appbar를 덮어씌우는 문제가 발생하여 appbar높이만큼 top값을 줘서 내린다.\r\n        position: 'absolute',                       //absolute 설정을 해주지 않으면 작은 화면 해상도에서 drawer가 붕뜨는 현상 발생(top:63px만큼)\r\n        backgroundColor: '#212529',\r\n        color: '#737678',\r\n    },\r\n    onScrollDrawerPaper : {\r\n        width: drawerWidth,\r\n        position: 'fixed',\r\n        backgroundColor: '#212529',\r\n        color: '#737678',\r\n        top:'0px',\r\n    },\r\n    drawerPaperLight: {                                  \r\n        width: drawerWidth,\r\n        top: '63px',                                \r\n        position: 'absolute',                      \r\n        backgroundColor: '#f8f9fa',\r\n        color: '#737678',\r\n    },\r\n    onScrollDrawerPaperLight : {\r\n        width: drawerWidth,\r\n        position: 'fixed',\r\n        backgroundColor: '#f8f9fa',\r\n        color: '#737678',\r\n        top:'0px',\r\n    },\r\n    // drawerHeader: {                                 \r\n    //     display: 'flex',\r\n    //     alignItems: 'center',\r\n    //     padding: theme.spacing(0,1),\r\n    //     ...theme.mixins.toolbar,\r\n    //     justifyContent: 'flex-end',\r\n\r\n\r\n    \r\n    // },\r\n    listItemStyle: {                    //사이드바 리스트 아이콘 색\r\n        color: '#737678',\r\n        \r\n    },\r\n    drawerFooter: {                     //사이드바 푸터\r\n        zIndex:1,\r\n        backgroundColor:'#343a40',\r\n        color:'#8f9296',\r\n        position:'relative',\r\n        bottom:'63px',\r\n        height:'80px',\r\n        // top:'584px',\r\n    },\r\n    onScrollDrawerFooter: {\r\n        zIndex:1,\r\n        backgroundColor:'#343a40',\r\n        color:'#8f9296',\r\n        position:'relative',\r\n        bottom:'0px',\r\n        height:'80px',\r\n    },\r\n    drawerFooterLight: {                     //사이드바 푸터\r\n        zIndex:1,\r\n        backgroundColor:'#e9ecef',\r\n        color:'#8f9296',\r\n        position:'relative',\r\n        bottom:'63px',\r\n        height:'80px',\r\n        // top:'584px',\r\n    },\r\n    onScrollDrawerFooterLight: {\r\n        zIndex:1,\r\n        backgroundColor:'#e9ecef',\r\n        color:'#8f9296',\r\n        position:'relative',\r\n        bottom:'0px',\r\n        height:'80px',\r\n    },\r\n    paddingDiv: {                       //사이드바 푸터를 하단 배치하기 위한 임의의 빈 공간\r\n        flex : 1,\r\n    },\r\n    menuTitle:{                         //사이드바에서 서브 메뉴들의 제목(CORE INTERFACE ADDONS)\r\n        fontSize: '13px',\r\n        fontWeight: \"800\",\r\n        margin:'20px 0px 15px 15px',\r\n        color:'#595c5f'\r\n\r\n    }\r\n\r\n    \r\n    \r\n}));\r\n\r\nconst RenderSubMenu = ({isOpen}) => {                       //열렸다면 ExpandMoreIcon을 렌더링하고 닫혔다면 ChevronRightIcon을 렌더링. 서브메뉴 공통으로 활용가능.\r\n        if(isOpen)\r\n        return <ExpandMoreIcon style={{color:'#737678'}}/>\r\n\r\n        return <ChevronRightIcon style={{color:'#737678'}}/>\r\n     }\r\nconst RenderLayouts = ({layoutEl}) => {\r\n    if(layoutEl){\r\n        return(\r\n            <>\r\n        <ListItem button>\r\n            <Link to=\"/staticnavigation\">\r\n            <ListItemText primary=\"Static Navigation\" style={{marginLeft:'55px'}}/>\r\n            </Link>\r\n        </ListItem>\r\n        \r\n        <ListItem button>\r\n            <Link to=\"/lightsidenav\">\r\n        <ListItemText primary=\"Light Sidenav\" style={{marginLeft:'55px'}}/>\r\n            </Link>\r\n    </ListItem>\r\n    </>\r\n        );\r\n    }\r\n    return <></>\r\n}\r\nconst RenderPages = ({pagesEl,authenEl,errorEl,handleAuth,handleErr}) => {\r\n    if(pagesEl){\r\n        return(\r\n            <>\r\n        <ListItem button onClick={handleAuth}>\r\n         \r\n            <ListItemText primary=\"Authentication\" style={{marginLeft:'55px'}}/>\r\n            <RenderSubMenu isOpen={authenEl}/>\r\n        </ListItem>\r\n        <RenderAuthentication authenEl={authenEl} />\r\n        <ListItem button onClick={handleErr}>\r\n        <ListItemText primary=\"Error\" style={{marginLeft:'55px'}}/>\r\n        <RenderSubMenu isOpen={errorEl}/>\r\n    </ListItem>\r\n        <RenderError errorEl={errorEl} />\r\n    </>\r\n        );\r\n    }\r\n    return <></>\r\n}\r\n\r\n\r\nconst RenderAuthentication = ({authenEl}) => {      //Authentication 메뉴\r\n    if(authenEl){\r\n        return(\r\n            <>\r\n            <ListItem button>\r\n                <Link to=\"/login\">\r\n                <ListItemText primary=\"Login\" style={{marginLeft:'65px'}}/>\r\n                </Link>\r\n            </ListItem>\r\n            <ListItem button>\r\n                <Link to=\"/register\">  \r\n                <ListItemText primary=\"Register\" style={{marginLeft:'65px'}}/>\r\n                </Link>\r\n            </ListItem>\r\n            <ListItem button>\r\n                <Link to=\"/forgot\">\r\n                <ListItemText primary=\"Forgot Password\" style={{marginLeft:'65px'}}/>\r\n                </Link>\r\n            </ListItem>\r\n            </>\r\n        );\r\n    }\r\n    return <></>\r\n}\r\n\r\nconst RenderError = ({errorEl}) => {        //Error 메뉴\r\n    if(errorEl){\r\n        return(\r\n            <>\r\n            \r\n            <ListItem button>\r\n            <Link to=\"/error401\">\r\n                <ListItemText primary=\"401 Page\" style={{marginLeft:'65px'}}/>   \r\n                </Link>           \r\n            </ListItem>\r\n            \r\n            <ListItem button>\r\n                <Link to=\"/error404\">\r\n                <ListItemText primary=\"404 Page\" style={{marginLeft:'65px'}}/>\r\n                </Link>\r\n            </ListItem>\r\n            <ListItem button>\r\n                <Link to=\"/error500\">\r\n                <ListItemText primary=\"500 Page\" style={{marginLeft:'65px'}}/>\r\n                </Link>\r\n            </ListItem>\r\n            </>\r\n        );\r\n    }\r\n    return <></>\r\n}\r\n\r\n\r\n\r\nconst Header = () => {\r\n    const open = useContext(OpenContext);               //drawer가 열려있는지 닫혀있는지 여부\r\n    const handleDrawerOpen = useContext(HandleDrawerContext);   //open을 토글시켜주는 함수\r\n    const styleClass = useStyles();                     //스타일 적용 클래스이름\r\n    const [profileEl, setProfileEl] = useState(null);  //앱바 우측에 있는 프로필 눌렸는지 여부\r\n    const isMenuOpen = Boolean(profileEl);              //프로필 메뉴 오픈여부를 Boolean로 확인하기 위함. 프로필 외에 다른 곳을 선택한다면 false가 됨.\r\n    const [layoutEl, setLayouEl] = useState(false);    //layouts 메뉴 클릭여부\r\n    const [pagesEl, setPagesEl] = useState(false);      //pages 메뉴 클릭여부\r\n    const [authenticationEl, setAuthenticationEl] = useState(false); //authentication 메뉴 클릭여부\r\n    const [errorEl, setErrorEl] = useState(false); //error 메뉴 클릭여부\r\n    const [scrollTop, setScrollTop] = useState(false); //scroll 내리는지 체크. false일때가 가장 맨위. drawer 위로 고정하기 위해 필요함.\r\n    const lightDrawer = useContext(lightDrawerContext); //light sidebar 메뉴를 선택했을 때 drawer의 색을 바꾸기 위함.\r\n   \r\n\r\n    useEffect(()=>{                                             //스크롤 이벤트 등록\r\n        window.addEventListener('scroll',onScroll);\r\n         \r\n        return() =>{\r\n            window.removeEventListener('scroll',onScroll);\r\n        };\r\n    });\r\n\r\n    const onScroll = (e) => {                               //위에서부터 스크롤을 내리면 값이 증가함.\r\n        const top = ('scroll', e.srcElement.scrollingElement.scrollTop);\r\n        (top > 0) && setScrollTop(true);\r\n        (top === 0) && setScrollTop(false);\r\n    };\r\n    \r\n    const handleProfileMenuOpen = (event) => {          //프로필 열기\r\n        console.log(\"작동확인\");\r\n        setProfileEl(event.currentTarget);\r\n        console.log(profileEl);\r\n    };\r\n    const handleProfileMenuClose = (event) => {                //프로필 닫기\r\n        setProfileEl(null);\r\n    };\r\n    const handleLayoutsMenuOpen = () => {               //Layouts 열고닫기\r\n        if(layoutEl === false)\r\n        setLayouEl(true);\r\n        else\r\n        setLayouEl(false);\r\n    }\r\n    const handlePagesMenuOpen = () => {                 //Pages 열고 닫기\r\n        if(pagesEl === false)\r\n        setPagesEl(true);\r\n        else\r\n        setPagesEl(false);\r\n    }\r\n    const handleAuthenticationMenuOpen = () => {                 //Authentication 열고 닫기\r\n        if(authenticationEl === false)\r\n        setAuthenticationEl(true);\r\n        else\r\n        setAuthenticationEl(false);\r\n    }\r\n    const handleErrorMenuOpen = () => {                 //Error 열고 닫기\r\n        if(errorEl === false)\r\n        setErrorEl(true);\r\n        else\r\n        setErrorEl(false);\r\n    }\r\n    \r\n    const menuId = 'primary-search-account-menu'; \r\n    \r\n    const renderMenu = (\r\n        <Menu profileEl={profileEl} getContentAnchorEl={null} id={menuId} keepMounted transformOrigin={{vertical:'top',horizontal:'right'}} open={isMenuOpen} onClose={handleProfileMenuClose} anchorOrigin={{vertical:'top',horizontal:'right'}}>\r\n            <MenuItem onClick={handleProfileMenuClose}>\r\n                Settings\r\n            </MenuItem>\r\n            <MenuItem onClick={handleProfileMenuClose}>\r\n                Acivity Log\r\n            </MenuItem>\r\n            <MenuItem onClick={handleProfileMenuClose}>\r\n                Logout\r\n            </MenuItem>\r\n        </Menu>\r\n    );\r\n    \r\n    return (\r\n        \r\n       <div style={{display:\"flex\"}}>\r\n           \r\n            <AppBar position=\"related\" className= {styleClass.barStyles}>\r\n                <Toolbar>\r\n                    \r\n                    <Typography>Start Bootstrap</Typography>\r\n                    <IconButton edge=\"start\"\r\n                    className = {styleClass.menuButton}\r\n                    aria-label=\"open drawer\"\r\n                    onClick={handleDrawerOpen}>\r\n                        <MenuIcon  />\r\n                    </IconButton>\r\n                    <p style={{flexGrow:'1'}}></p>\r\n                    <div className={styleClass.searchBox} style={{display:'flex'}}>\r\n                    <InputBase placeholder=\"Search for...\" inputProps={{'aria-label':'search'}} style={{paddingLeft:\"10px\"}} />\r\n                        <div className={styleClass.searchIcon}>\r\n                           <SearchIcon color=\"inherit\" style={{fontSize:'26px'}} />\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <IconButton edge=\"end\"\r\n                    onClick={handleProfileMenuOpen}\r\n                    color=\"inherit\"\r\n                    aria-controls={menuId}\r\n                    aria-haspopup=\"true\"\r\n                    style={{marginLeft:'10px'}}\r\n                    >\r\n                        <AccountCircle />\r\n                    </IconButton>\r\n                    \r\n                </Toolbar>\r\n                \r\n            </AppBar>\r\n            {renderMenu}\r\n        \r\n            <Drawer className={styleClass.drawer} variant=\"persistent\" anchor=\"left\" open={open} classes={{paper: clsx(styleClass.drawerPaper,{  //스크롤 내릴때와 light여부에 따라 다르게 적용\r\n            [styleClass.onScrollDrawerPaper] : lightDrawer&&scrollTop,\r\n            [styleClass.drawerPaperLight] : !scrollTop&&!lightDrawer,\r\n            [styleClass.onScrollDrawerPaperLight] : scrollTop&&!lightDrawer,\r\n        })}}>\r\n            <List paddingLeft=\"5px\">\r\n                    <Typography className={styleClass.menuTitle}>CORE</Typography>\r\n            \r\n                    <ListItem button>\r\n                        <ListItemIcon className={styleClass.listItemStyle}><DashboardIcon/></ListItemIcon> {/*아이템 색을 바꾸려면 class로 따로 색지정해야함 */}\r\n                        <Link to=\"/dashboard\">\r\n                        <ListItemText primary=\"dashboard\"/>\r\n                        </Link>\r\n                    </ListItem>\r\n                    <Typography className={styleClass.menuTitle}>INTERFACE</Typography>\r\n                    <ListItem button onClick={handleLayoutsMenuOpen}>\r\n                        <ListItemIcon className={styleClass.listItemStyle}><LayersIcon/></ListItemIcon> \r\n                        <ListItemText primary=\"Layouts\" />\r\n                        <RenderSubMenu isOpen={layoutEl}/>\r\n                    </ListItem>\r\n                    <RenderLayouts layoutEl={layoutEl} />\r\n                    <ListItem button onClick={handlePagesMenuOpen}>\r\n                        <ListItemIcon className={styleClass.listItemStyle}><MenuBookIcon/></ListItemIcon> \r\n                        <ListItemText primary=\"Pages\" />\r\n                        <RenderSubMenu isOpen={pagesEl}/>\r\n                    </ListItem>\r\n                    <RenderPages pagesEl={pagesEl} authenEl = {authenticationEl} errorEl={errorEl} handleAuth={handleAuthenticationMenuOpen} handleErr={handleErrorMenuOpen}/>\r\n                    <Typography className={styleClass.menuTitle}>ADDONS</Typography>\r\n                    <ListItem button>\r\n                        <ListItemIcon className={styleClass.listItemStyle}><BarChartIcon/></ListItemIcon> \r\n                        <Link to=\"/charts\">\r\n                        <ListItemText primary=\"Charts\" />\r\n                        </Link>\r\n                    </ListItem>\r\n                    <ListItem button>\r\n                        <ListItemIcon className={styleClass.listItemStyle}><TableChartIcon/></ListItemIcon> \r\n                        <Link to=\"/tables\">\r\n                        <ListItemText primary=\"Tables\" />\r\n                        </Link>\r\n                    </ListItem>\r\n                    <ListItem button>\r\n                        <ListItemIcon className={styleClass.listItemStyle}><TableChartIcon/></ListItemIcon> \r\n                        <Link to=\"/grid\">\r\n                        <ListItemText primary=\"Grid\" />\r\n                        </Link>\r\n                    </ListItem>\r\n            </List>\r\n            <div className={styleClass.paddingDiv}/>\r\n            <Box className={clsx(styleClass.drawerFooter,{\r\n                [styleClass.onScrollDrawerFooter] : lightDrawer&&scrollTop,\r\n                [styleClass.drawerFooterLight] : !scrollTop&&!lightDrawer,\r\n                [styleClass.onScrollDrawerFooterLight] : scrollTop&&!lightDrawer,\r\n            })}>\r\n                <Typography style={{margin:'14px 0px 0px 10px',fontSize:'14px'}}>Logged in as:</Typography>\r\n                <Typography style={{marginLeft:'10px'}}>Start Bootstrap</Typography>\r\n            </Box>\r\n        </Drawer>\r\n        \r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\n\r\nexport default Header;","C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\App.js",["125","126","127","128","129"],"import Header from \"./components/Header\";\nimport {BrowserRouter, Route, Link} from 'react-router-dom';\nimport Dashboard from \"./pages/Dashboard\";\nimport Charts from \"./pages/Charts\";\nimport React, {useState } from 'react'; \nimport { Table } from \"@material-ui/core\";\nimport Tables from \"./pages/Tables\";\nimport StaticNavigation from \"./pages/StaticNavigation\";\nimport LightSidenav from \"./pages/LightSidenav\";\nimport Authentication from \"./pages/Authentication\";\nimport Error from \"./pages/Error\";\nimport Footer from \"./components/Footer\";\nimport Error401 from \"./pages/Error401\";\nimport Error404 from \"./pages/Error404\";\nimport Error500 from \"./pages/Error500\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport ForgotPassword from \"./pages/ForgotPassword\";\nimport Grid from \"./components/Grid\";\nimport GridPage from \"./pages/GridPage\";\n\n\n\nexport const OpenContext = React.createContext({open:false });\nexport const HandleDrawerContext = React.createContext(()=>{});\nexport const HandleSHowHeader = React.createContext(()=>{});\nexport const showHeaderContext = React.createContext({showHeader:true});\nexport const lightDrawerContext = React.createContext({lightDrawer:true});\nexport const HandleLight = React.createContext(()=>{});\n    \nfunction App() {\n  const [showHeader,setShowHeader] = useState(true);\n  const [open, setOpen] = useState(false);\n  const handleDrawerOpen = () => {                    //메뉴 열고 닫기\n        // if(open === false)\n        // setOpen(true);\n        // else\n        // setOpen(false);\n        setOpen(!open);\n  };\n  const handleShowHeader = () => {\n    setShowHeader(!showHeader);\n  }\n  const [lightDrawer, setLightDrawer] = useState(true); // Light Sidenav 클릭시 drawer 밝게 만들기 위함.\n  const handleLight = () => {\n      setLightDrawer(!lightDrawer);\n  };\n\n  return (\n    <BrowserRouter>\n    <div>\n      <HandleLight.Provider value={handleLight}>\n      <lightDrawerContext.Provider value={lightDrawer}>\n      <HandleSHowHeader.Provider value={handleShowHeader}>\n      <HandleDrawerContext.Provider value={handleDrawerOpen}>\n      <OpenContext.Provider value={open}>\n      <showHeaderContext.Provider value={showHeader}>\n      {showHeader && <Header/> }\n      \n      <Route exact path=\"/\" component={Dashboard}/>\n      <Route path=\"/dashboard\" component={Dashboard}/>\n      <Route path=\"/charts\" component={Charts}/>\n      <Route path=\"/tables\" component={Tables}/>\n      <Route path=\"/staticnavigation\" component={StaticNavigation}/>\n      <Route path=\"/lightsidenav\" component={LightSidenav}/>\n      <Route path=\"/authentication\" component={Authentication}/>\n      <Route path=\"/login\" component={Login}/>\n      <Route path=\"/register\" component={Register}/>\n      <Route path=\"/forgot\" component={ForgotPassword}/>\n      <Route path=\"/error401\" component={Error401}/>\n      <Route path=\"/error404\" component={Error404}/>\n      <Route path=\"/error500\" component={Error500}/>\n      <Route path=\"/grid\" component={GridPage}/>\n      \n     \n      </showHeaderContext.Provider>\n      </OpenContext.Provider>\n      </HandleDrawerContext.Provider>\n      </HandleSHowHeader.Provider>\n      </lightDrawerContext.Provider>\n      </HandleLight.Provider>\n    </div>\n    <div>\n\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n",["130","131"],"C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\index.js",[],["132","133"],"C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\pages\\Dashboard.js",[],"C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\pages\\Charts.js",[],["134","135"],"C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\pages\\Tables.js",[],["136","137"],"C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\pages\\StaticNavigation.js",["138"],"\r\nimport  {React, useContext } from 'react';\r\nimport { OpenContext} from '../App';\r\nimport clsx from 'clsx';\r\nimport { Box, Card, CardActionArea, Divider, makeStyles, Typography, Paper, InputBase, Container } from '@material-ui/core';\r\nimport {ChevronRight,BarChart,ShowChart,TableChart} from '@material-ui/icons';\r\nimport AreaChart from '../components/AreaChart';\r\nimport BarCharts from '../components/BarCharts';\r\nimport DataTable from '../components/DataTable';\r\nimport { Link } from 'react-router-dom';\r\nimport PieChart from '../components/PieChart';\r\nimport PieChartIcon from '@material-ui/icons/PieChart';\r\n\r\n\r\nconst useMainStyles = makeStyles((theme)=>({\r\n    content : {\r\n      flexGrow: 1,\r\n      paddingLeft:'25px',\r\n      height: '90vh',\r\n  },\r\n  contentShift: {\r\n      width: `calc(100%-240px)`,\r\n      marginLeft: '240px',\r\n      transition: theme.transitions.create(['margin','width'], {\r\n                  easing: theme.transitions.easing.easeOut,\r\n                  duration: theme.transitions.duration.enteringScreen,\r\n              }),\r\n  },\r\n  linkBox: {\r\n      width: '90%',\r\n      backgroundColor: '#e9ecef',\r\n      height: '50px',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      paddingLeft: '15px',\r\n      color: '#6c757d',\r\n  },\r\n  card : {\r\n      marginTop: '20px',\r\n      width: 340,\r\n      height: 120,\r\n      backgroundColor: '#007bff',\r\n      color: 'white',\r\n      display: 'flex',\r\n      \r\n      flexDirection: 'column'\r\n  },\r\n  cardBox : {\r\n      borderBottom:'1px solid #0068d8',\r\n      height:'80px',\r\n      display:'flex',\r\n      alignItems:'center',\r\n      \r\n  },\r\n  cardsBox : {\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n      marginRight: '9%',\r\n  },\r\n  loginBoxHeader : {\r\n    height: '50px',\r\n    backgroundColor: '#eeeeee',\r\n    borderRadius: '5px 5px 0px 0px',\r\n    display: 'flex',\r\n    paddingLeft: '20px',\r\n    alignItems:'center',\r\n    borderBottom: '1px solid #c8c8c8'\r\n},\r\ninputBox : {\r\n    border: '1px solid gray',\r\n    width: '10%',\r\n    alignSelf: 'center',\r\n    height: '36px',\r\n    borderRadius: '5px 5px 5px 5px',\r\n    paddingLeft: '8px',\r\n    marginLeft:'10px',\r\n\r\n},\r\n  }));   \r\nconst StaticNavigation = () => {\r\n    const open = useContext(OpenContext);\r\n    const styleClass = useMainStyles();\r\n    return (\r\n        <div className={clsx(styleClass.content, {\r\n            [styleClass.contentShift]: open,\r\n        })}>\r\n            <h1>Dashboard Static</h1>\r\n            <Box className={styleClass.linkBox}><Link style={{color:\"#007bfc\"}} to=\"dashboard\">Dashboard</Link> &nbsp;/ Static</Box>\r\n            <Box className={styleClass.cardsBox}>\r\n                <Card className={styleClass.card}>\r\n                    <CardActionArea>\r\n                        <Box className={styleClass.cardBox}><Typography variant=\"h5\" style={{paddingLeft:'20px'}}>Primary Card</Typography></Box>\r\n                        <Typography style={{paddingLeft:'20px',fontSize:'16px',paddingTop:'6px'}}>View Details<ChevronRight style={{marginLeft:'60%',verticalAlign:'middle'}}/></Typography>\r\n                    </CardActionArea>\r\n                </Card>\r\n                <Card className={styleClass.card} style={{backgroundColor:\"#ffc107\"}}>\r\n                    <CardActionArea>\r\n                        <Box className={styleClass.cardBox} style={{borderBottom:\"1px solid #d9a946\"}}><Typography variant=\"h5\" style={{paddingLeft:'20px'}}>Warning Card</Typography></Box>\r\n                        <Typography style={{paddingLeft:'20px',fontSize:'16px',paddingTop:'6px'}}>View Details<ChevronRight style={{marginLeft:'60%',verticalAlign:'middle'}}/></Typography>\r\n                    </CardActionArea>\r\n                </Card>\r\n                <Card className={styleClass.card} style={{backgroundColor:\"#28a745\"}}>\r\n                    <CardActionArea>\r\n                        <Box className={styleClass.cardBox} style={{borderBottom:\"1px solid #228d3a\"}}><Typography variant=\"h5\" style={{paddingLeft:'20px'}}>Success Card</Typography></Box>\r\n                        <Typography style={{paddingLeft:'20px',fontSize:'16px',paddingTop:'6px'}}>View Details<ChevronRight style={{marginLeft:'60%',verticalAlign:'middle'}}/></Typography>\r\n                    </CardActionArea>\r\n                </Card>\r\n                <Card className={styleClass.card} style={{backgroundColor:\"#dc3545\"}}>\r\n                    <CardActionArea>\r\n                        <Box className={styleClass.cardBox} style={{borderBottom:\"1px solid #b93343\"}}><Typography variant=\"h5\" style={{paddingLeft:'20px'}}>Danger Card</Typography></Box>\r\n                        <Typography style={{paddingLeft:'20px',fontSize:'16px',paddingTop:'6px'}}>View Details<ChevronRight style={{marginLeft:'60%',verticalAlign:'middle'}}/></Typography>\r\n                    </CardActionArea>\r\n                </Card>\r\n            </Box>\r\n            <Box style={{width:'100%',display:'flex',marginTop:'40px'}}>\r\n            <Paper style={{width:'45%'}}>\r\n                <Box className={styleClass.loginBoxHeader}><ShowChart/>Area Chart Example</Box>\r\n                <AreaChart/>\r\n            </Paper>\r\n            <Paper style={{width:'45%', marginLeft:'20px'}}>\r\n                <Box className={styleClass.loginBoxHeader}><BarChart/>Bar Chart Example</Box>\r\n                <BarCharts/>\r\n            </Paper>\r\n            </Box>\r\n            <Box style={{width:'91%', margin:'40px 0px 40px 0px', border:'1px solid #dfdfdf'}}>\r\n                <Box className={styleClass.loginBoxHeader}><TableChart style={{marginRight:'5px'}}/>DataTable Example</Box>\r\n                <Box style={{width:'97%',marginLeft:'auto',marginRight:'auto',marginBottom:'20px'}}>\r\n                <Box style={{display:'flex'}}><p>Full text search:</p><InputBase className={styleClass.inputBox}></InputBase></Box>\r\n                <Divider/>\r\n                \r\n                <DataTable/>\r\n                </Box>\r\n            </Box>\r\n            <Paper>\r\n            <Box className={styleClass.loginBoxHeader}><PieChartIcon style={{marginRight:'5px'}}/>Pie Chart Example</Box>\r\n            <PieChart/>\r\n            </Paper>\r\n            <Box style={{height:'40px'}}></Box>\r\n           \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StaticNavigation;","C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\components\\Footer.js",[],["139","140"],"C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\pages\\Authentication.js",[],"C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\pages\\LightSidenav.js",["141","142"],"\r\nimport  {React, useContext, useEffect } from 'react';\r\nimport { lightDrawerContext, OpenContext,HandleLight} from '../App';\r\nimport clsx from 'clsx';\r\nimport { Box, Button, Card, CardActionArea, CardActions, Divider, makeStyles, Typography, Paper, InputBase } from '@material-ui/core';\r\nimport {ChevronRight,BarChart,ShowChart,TableChart} from '@material-ui/icons';\r\nimport AreaChart from '../components/AreaChart';\r\nimport BarCharts from '../components/BarCharts';\r\nimport DataTable from '../components/DataTable';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst useMainStyles = makeStyles((theme)=>({\r\n    content : {\r\n      flexGrow: 1,\r\n      paddingLeft:'25px',\r\n      height: '90vh',\r\n  },\r\n  contentShift: {\r\n      width: `calc(100%-240px)`,\r\n      marginLeft: '240px',\r\n      transition: theme.transitions.create(['margin','width'], {\r\n                  easing: theme.transitions.easing.easeOut,\r\n                  duration: theme.transitions.duration.enteringScreen,\r\n              }),\r\n  },\r\n  linkBox: {\r\n      width: '90%',\r\n      backgroundColor: '#e9ecef',\r\n      height: '50px',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      paddingLeft: '15px',\r\n      color: '#6c757d',\r\n  },\r\n  card : {\r\n      marginTop: '20px',\r\n      width: 340,\r\n      height: 120,\r\n      backgroundColor: '#007bff',\r\n      color: 'white',\r\n      display: 'flex',\r\n      \r\n      flexDirection: 'column'\r\n  },\r\n  cardBox : {\r\n      borderBottom:'1px solid #0068d8',\r\n      height:'80px',\r\n      display:'flex',\r\n      alignItems:'center',\r\n      \r\n  },\r\n  cardsBox : {\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n      marginRight: '9%',\r\n  },\r\n  loginBoxHeader : {\r\n    height: '50px',\r\n    backgroundColor: '#eeeeee',\r\n    borderRadius: '5px 5px 0px 0px',\r\n    display: 'flex',\r\n    paddingLeft: '20px',\r\n    alignItems:'center',\r\n    borderBottom: '1px solid #c8c8c8'\r\n},\r\ninputBox : {\r\n    border: '1px solid gray',\r\n    width: '10%',\r\n    alignSelf: 'center',\r\n    height: '36px',\r\n    borderRadius: '5px 5px 5px 5px',\r\n    paddingLeft: '8px',\r\n    marginLeft:'10px',\r\n\r\n},\r\n  }));   \r\nconst LightSidenav = () => {\r\n    const open = useContext(OpenContext);\r\n    const lightDrawer = useContext(lightDrawerContext);\r\n    const handleLight = useContext(HandleLight);\r\n    const styleClass = useMainStyles();\r\n    useEffect(()=>{\r\n        lightDrawer && handleLight();\r\n        return()=>{\r\n            !lightDrawer && handleLight();\r\n        }\r\n    },);\r\n    return (\r\n        <div className={clsx(styleClass.content, {\r\n            [styleClass.contentShift]: open,\r\n        })}>\r\n            <h1>Dashboard Light</h1>\r\n            <Box className={styleClass.linkBox}><Link style={{color:\"#007bfc\"}} to=\"dashboard\">Dashboard</Link> &nbsp;/ Light</Box>\r\n            <Box className={styleClass.cardsBox}>\r\n                <Card className={styleClass.card}>\r\n                    <CardActionArea>\r\n                        <Box className={styleClass.cardBox}><Typography variant=\"h5\" style={{paddingLeft:'20px'}}>Primary Card</Typography></Box>\r\n                        <Typography style={{paddingLeft:'20px',fontSize:'16px',paddingTop:'6px'}}>View Details<ChevronRight style={{marginLeft:'60%',verticalAlign:'middle'}}/></Typography>\r\n                    </CardActionArea>\r\n                </Card>\r\n                <Card className={styleClass.card} style={{backgroundColor:\"#ffc107\"}}>\r\n                    <CardActionArea>\r\n                        <Box className={styleClass.cardBox} style={{borderBottom:\"1px solid #d9a946\"}}><Typography variant=\"h5\" style={{paddingLeft:'20px'}}>Warning Card</Typography></Box>\r\n                        <Typography style={{paddingLeft:'20px',fontSize:'16px',paddingTop:'6px'}}>View Details<ChevronRight style={{marginLeft:'60%',verticalAlign:'middle'}}/></Typography>\r\n                    </CardActionArea>\r\n                </Card>\r\n                <Card className={styleClass.card} style={{backgroundColor:\"#28a745\"}}>\r\n                    <CardActionArea>\r\n                        <Box className={styleClass.cardBox} style={{borderBottom:\"1px solid #228d3a\"}}><Typography variant=\"h5\" style={{paddingLeft:'20px'}}>Success Card</Typography></Box>\r\n                        <Typography style={{paddingLeft:'20px',fontSize:'16px',paddingTop:'6px'}}>View Details<ChevronRight style={{marginLeft:'60%',verticalAlign:'middle'}}/></Typography>\r\n                    </CardActionArea>\r\n                </Card>\r\n                <Card className={styleClass.card} style={{backgroundColor:\"#dc3545\"}}>\r\n                    <CardActionArea>\r\n                        <Box className={styleClass.cardBox} style={{borderBottom:\"1px solid #b93343\"}}><Typography variant=\"h5\" style={{paddingLeft:'20px'}}>Danger Card</Typography></Box>\r\n                        <Typography style={{paddingLeft:'20px',fontSize:'16px',paddingTop:'6px'}}>View Details<ChevronRight style={{marginLeft:'60%',verticalAlign:'middle'}}/></Typography>\r\n                    </CardActionArea>\r\n                </Card>\r\n            </Box>\r\n            <Box style={{width:'100%',display:'flex',marginTop:'40px'}}>\r\n            <Paper style={{width:'45%'}}>\r\n                <Box className={styleClass.loginBoxHeader}><ShowChart/>Area Chart Example</Box>\r\n                <AreaChart/>\r\n            </Paper>\r\n            <Paper style={{width:'45%', marginLeft:'20px'}}>\r\n                <Box className={styleClass.loginBoxHeader}><BarChart/>Bar Chart Example</Box>\r\n                <BarCharts/>\r\n            </Paper>\r\n            </Box>\r\n            <Box style={{width:'91%', margin:'40px 0px 40px 0px', border:'1px solid #dfdfdf'}}>\r\n                <Box className={styleClass.loginBoxHeader}><TableChart style={{marginRight:'5px'}}/>DataTable Example</Box>\r\n                <Box style={{width:'97%',marginLeft:'auto',marginRight:'auto',marginBottom:'20px'}}>\r\n                <Box style={{display:'flex'}}><p>Full text search:</p><InputBase className={styleClass.inputBox}></InputBase></Box>\r\n                <Divider/>\r\n                \r\n                <DataTable/>\r\n                </Box>\r\n            </Box>\r\n            <Box style={{height:'40px'}}></Box>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LightSidenav;",["143","144"],"C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\pages\\Error.js",[],["145","146"],"C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\pages\\Error401.js",["147"],"import { makeStyles, Typography } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { HandleSHowHeader, showHeaderContext } from '../App';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nconst useMainStyles = makeStyles((theme)=>({\r\n    content : {\r\n      flexGrow: 1,\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      flexDirection: 'column',\r\n      paddingTop: '40px',\r\n      \r\n      \r\n\r\n  },\r\n  linkColor : {\r\n      color: '#52beff',\r\n  }\r\n  \r\n\r\n  }));   \r\nconst Error401 = () => {\r\n    const handleShowHeader = useContext(HandleSHowHeader);\r\n    const showHeader = useContext(showHeaderContext);\r\n    const styleClass = useMainStyles();\r\n    useEffect(()=>{\r\n        showHeader && handleShowHeader();\r\n        return() => {\r\n            !showHeader && handleShowHeader();\r\n        };\r\n    },);\r\n    \r\n    return (\r\n        <div className={styleClass.content}>\r\n            <Typography variant=\"h1\">401</Typography>\r\n            <Typography variant=\"h6\">Unauthorized</Typography>\r\n            <p>Access to this resource is denied.</p>\r\n            <div style={{marginTop:'5px'}}><Link to=\"/\" onClick={handleShowHeader}><ArrowBackIcon className={styleClass.linkColor}/><p className={styleClass.linkColor} style={{display:'inline',verticalAlign:'super'}}>return to dashboard</p></Link></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Error401;","C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\pages\\Error500.js",["148"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { HandleSHowHeader, showHeaderContext } from '../App';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { makeStyles, Typography } from '@material-ui/core';\r\n\r\nconst useMainStyles = makeStyles((theme)=>({\r\n    content : {\r\n      flexGrow: 1,\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      flexDirection: 'column',\r\n      paddingTop: '40px',\r\n      \r\n      \r\n\r\n  },\r\n  linkColor : {\r\n      color: '#52beff',\r\n  }\r\n  \r\n\r\n  }));\r\nconst Error500 = () => {\r\n    const handleShowHeader = useContext(HandleSHowHeader);\r\n    const showHeader = useContext(showHeaderContext);\r\n    const styleClass = useMainStyles();\r\n    useEffect(()=>{\r\n        showHeader && handleShowHeader();\r\n        return() => {\r\n            !showHeader && handleShowHeader();\r\n        };\r\n    },);\r\n    \r\n    return (\r\n        <div className={styleClass.content}>\r\n            <Typography variant=\"h1\">500</Typography>\r\n            <Typography variant=\"h6\">Internal Server Error</Typography>\r\n            <div style={{marginTop:'5px'}}><Link to=\"/\" onClick={handleShowHeader}><ArrowBackIcon className={styleClass.linkColor}/><p className={styleClass.linkColor} style={{display:'inline',verticalAlign:'super'}}>return to dashboard</p></Link></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Error500;",["149","150"],"C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\pages\\Error404.js",["151","152","153"],"import { makeStyles } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { HandleSHowHeader, showHeaderContext } from '../App';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nconst useMainStyles = makeStyles((theme)=>({\r\n    content : {\r\n      flexGrow: 1,\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      flexDirection: 'column',\r\n      paddingTop: '40px',\r\n      \r\n      \r\n\r\n  },\r\n  linkColor : {\r\n      color: '#52beff',\r\n  }\r\n  \r\n\r\n  }));   \r\nconst Error404 = ({}) => {\r\n    const handleShowHeader = useContext(HandleSHowHeader);\r\n    const showHeader = useContext(showHeaderContext);\r\n    const styleClass = useMainStyles();\r\n    useEffect(()=>{\r\n        \r\n        showHeader && handleShowHeader();\r\n        return() => {\r\n            !showHeader && handleShowHeader();\r\n        };\r\n    });\r\n    \r\n    return (\r\n        <div className={styleClass.content}>\r\n            \r\n            <img src=\"https://sb-admin-angular.startbootstrap.com/assets/img/error-404-monochrome.svg\" height=\"320px\" />\r\n            <p>This requested URL was not found on this server.</p>\r\n            <div style={{marginTop:'5px'}}><Link to=\"/\" onClick={handleShowHeader}><ArrowBackIcon className={styleClass.linkColor}/><p className={styleClass.linkColor} style={{display:'inline',verticalAlign:'super'}}>return to dashboard</p></Link></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Error404;","C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\pages\\ForgotPassword.js",["154","155"],"import React, { useContext, useEffect } from 'react';\r\nimport { Box, Button, Checkbox, Input, InputBase, makeStyles, Typography } from '@material-ui/core';\r\nimport { HandleSHowHeader, showHeaderContext } from '../App';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\r\n    content: {\r\n        width: '100%',\r\n        backgroundColor: '#007bff',\r\n        height:'95.9vh',\r\n        display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      flexDirection: 'column',\r\n      paddingTop: '40px',\r\n    },\r\n    loginBox : {\r\n        width: '25%',\r\n        height: '385px',\r\n        backgroundColor: 'white',\r\n        borderRadius: '5px 5px 5px 5px',\r\n        display:'flex',\r\n        flexDirection: 'column',\r\n        marginBottom: '20vh'\r\n        \r\n    },\r\n    loginBoxHeader : {\r\n        height: '100px',\r\n        backgroundColor: '#eeeeee',\r\n        borderRadius: '5px 5px 0px 0px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems:'center',\r\n        borderBottom: '1px solid #c8c8c8'\r\n    },\r\n    title : {\r\n        marginLeft: '25px',\r\n        fontSize: '16px',\r\n        fontFamily: 'monospace, \"times New Roman\", serif',\r\n        margin: '15px 0px 7px 0px',\r\n    },\r\n    inputBox : {\r\n        border: '1px solid gray',\r\n        width: '90%',\r\n        alignSelf: 'center',\r\n        height: '56px',\r\n        borderRadius: '5px 5px 5px 5px',\r\n        paddingLeft: '8px',\r\n\r\n    },\r\n    loginBottom : {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        verticalAlign: 'middle',\r\n        marginTop: '20px',\r\n    },\r\n    loginFooter : {\r\n        height: '5vh',\r\n        backgroundColor: '#eeeeee',\r\n        borderRadius: '0px 0px 5px 5px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems:'center',\r\n        marginTop: '20px',\r\n        borderTop: '1px solid #c8c8c8'\r\n    },\r\n    descrptionP : {\r\n        fontSize: '14px',\r\n        color: 'gray',\r\n        marginLeft: '25px',\r\n    },\r\n}));\r\n\r\nconst ForgotPassword = () => {\r\n    const styleClass = useStyles();\r\n    const handleShowHeader = useContext(HandleSHowHeader);\r\n    const showHeader = useContext(showHeaderContext);\r\n    useEffect(()=>{\r\n        \r\n        showHeader && handleShowHeader();\r\n        return() => {\r\n            !showHeader && handleShowHeader();\r\n        };\r\n    });\r\n    return (\r\n        <div className={styleClass.content}>\r\n            <Box className={styleClass.loginBox}>\r\n                <Box className={styleClass.loginBoxHeader}><Typography variant=\"h4\">Password Recovery</Typography></Box>\r\n                <p className={styleClass.descrptionP}>Enter your email address and we will send you a link to reset your password.</p>\r\n                <p className={styleClass.title}>Email</p>\r\n                <InputBase className={styleClass.inputBox}  placeholder=\"Enter email address\"></InputBase>\r\n                <Box className={styleClass.loginBottom}><Link to=\"/login\" style={{color:'#00a4fc'}}>Return to Login</Link><Link to=\"/\"><Button variant=\"contained\" color=\"primary\">Reset Password</Button></Link></Box>\r\n                <Box className={styleClass.loginFooter}><Link to=\"/register\" style={{color:'#00a4fc'}}>Need an account? Sign up!</Link></Box>\r\n            </Box>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ForgotPassword;",["156","157"],"C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\pages\\Login.js",[],["158","159"],"C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\pages\\Register.js",["160","161"],"import React, { useContext, useEffect } from 'react';\r\nimport { Box, Button, Checkbox, Input, InputBase, makeStyles, Typography } from '@material-ui/core';\r\nimport { HandleSHowHeader, showHeaderContext } from '../App';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\r\n    content: {\r\n        width: '100%',\r\n        backgroundColor: '#007bff',\r\n        height:'100vh',\r\n        display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      flexDirection: 'column',\r\n      \r\n    },\r\n    loginBox : {\r\n        width: '40%',\r\n        height: '550px',\r\n        backgroundColor: 'white',\r\n        borderRadius: '5px 5px 5px 5px',\r\n        display:'flex',\r\n        flexDirection: 'column',\r\n        marginBottom: '20vh'\r\n        \r\n    },\r\n    loginBoxHeader : {\r\n        height: '200px',\r\n        backgroundColor: '#eeeeee',\r\n        borderRadius: '5px 5px 0px 0px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems:'center',\r\n        borderBottom: '1px solid #c8c8c8'\r\n    },\r\n    title : {\r\n        marginLeft: '20px',\r\n        fontSize: '16px',\r\n        fontFamily: 'monospace, \"times New Roman\", serif',\r\n        margin: '20px 0px 7px 0px',\r\n    },\r\n    inputBox : {\r\n        border: '1px solid gray',\r\n        width: '90%',\r\n        alignSelf: 'center',\r\n        height: '56px',\r\n        borderRadius: '5px 5px 5px 5px',\r\n        paddingLeft: '8px',\r\n        margin: '0px 5px 0px 20px'\r\n\r\n    },\r\n    inputBox2 :{\r\n        border: '1px solid gray',\r\n        width: '95%',\r\n        alignSelf: 'center',\r\n        height: '56px',\r\n        borderRadius: '5px 5px 5px 5px',\r\n        paddingLeft: '8px',\r\n        margin: '0px 5px 0px 20px'\r\n    },\r\n    loginBottom : {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        marginTop: '60px',\r\n        width: '100%',\r\n        marginBottom:'20px',\r\n      \r\n\r\n    },\r\n    loginFooter : {\r\n        height: '100px',\r\n        backgroundColor: '#eeeeee',\r\n        borderRadius: '0px 0px 5px 5px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems:'center',\r\n        marginTop: '6px',\r\n        borderTop: '1px solid #c8c8c8'\r\n    },\r\n    rowLiner : {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n    },\r\n    rowBox : {\r\n        width: '100%'\r\n    }\r\n}));\r\n\r\nconst Register = () => {\r\n    const styleClass = useStyles();\r\n    const handleShowHeader = useContext(HandleSHowHeader);\r\n    const showHeader = useContext(showHeaderContext);\r\n    useEffect(()=>{\r\n        \r\n        showHeader && handleShowHeader();\r\n        return() => {\r\n            !showHeader && handleShowHeader();\r\n        };\r\n    });\r\n    return (\r\n        <div className={styleClass.content}>\r\n            <Box className={styleClass.loginBox}>\r\n                <Box className={styleClass.loginBoxHeader}><Typography variant=\"h4\">Create Account</Typography></Box>\r\n                <Box className={styleClass.rowLiner}>\r\n                    <Box className={styleClass.rowBox}>\r\n                        <p className={styleClass.title}>First Name</p>\r\n                        <InputBase className={styleClass.inputBox}  placeholder=\"Enter first name\"></InputBase>\r\n                    </Box>\r\n                    <Box className={styleClass.rowBox}>\r\n                        <p className={styleClass.title}>Last Name</p>\r\n                        <InputBase className={styleClass.inputBox}  placeholder=\"Enter last name\"></InputBase>\r\n                    </Box>\r\n                </Box>\r\n                <Box className={styleClass.rowLiner}>\r\n                    <Box className={styleClass.rowBox}>\r\n                        <p className={styleClass.title}>Email</p>\r\n                        <InputBase className={styleClass.inputBox2}  placeholder=\"Enter email address\"></InputBase>\r\n                    </Box>\r\n                </Box>\r\n                <Box className={styleClass.rowLiner}>\r\n                    <Box className={styleClass.rowBox}>\r\n                        <p className={styleClass.title}>password</p>\r\n                        <InputBase className={styleClass.inputBox}  placeholder=\"Enter password\"></InputBase>\r\n                    </Box>\r\n                    <Box className={styleClass.rowBox}>\r\n                        <p className={styleClass.title}>Confirm Password</p>\r\n                        <InputBase className={styleClass.inputBox}  placeholder=\"Confirm Password\"></InputBase>\r\n                    </Box>\r\n                </Box>\r\n                \r\n                \r\n                <Box className={styleClass.loginBottom}><Link to=\"/\" style={{width:'95%'}}><Button variant=\"contained\" color=\"primary\" style={{width:'100%'}}>Create Account</Button></Link></Box>\r\n                <Box className={styleClass.loginFooter}><Link to=\"/login\" style={{color:'#00a4fc'}}>Have an account? Go to login</Link></Box>\r\n            </Box>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;",["162","163"],"C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\components\\AreaChart.js",["164","165"],"C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\components\\BarCharts.js",["166"],"C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\components\\DataTable.js",["167"],"C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\components\\PieChart.js",[],"C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\components\\Grid.js",["168","169","170"],"C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\pages\\GridPage.js",["171","172","173"],"C:\\Users\\HSE-KJH\\Desktop\\workspace\\jaehak-app\\src\\realgrid-data.js",[],{"ruleId":"174","severity":1,"message":"175","line":4,"column":10,"nodeType":"176","messageId":"177","endLine":4,"endColumn":16},{"ruleId":"174","severity":1,"message":"178","line":4,"column":31,"nodeType":"176","messageId":"177","endLine":4,"endColumn":35},{"ruleId":"174","severity":1,"message":"179","line":16,"column":16,"nodeType":"176","messageId":"177","endLine":16,"endColumn":21},{"ruleId":"174","severity":1,"message":"180","line":17,"column":8,"nodeType":"176","messageId":"177","endLine":17,"endColumn":14},{"ruleId":"174","severity":1,"message":"181","line":18,"column":8,"nodeType":"176","messageId":"177","endLine":18,"endColumn":17},{"ruleId":"174","severity":1,"message":"182","line":20,"column":8,"nodeType":"176","messageId":"177","endLine":20,"endColumn":12},{"ruleId":"174","severity":1,"message":"183","line":21,"column":8,"nodeType":"176","messageId":"177","endLine":21,"endColumn":22},{"ruleId":"174","severity":1,"message":"184","line":2,"column":31,"nodeType":"176","messageId":"177","endLine":2,"endColumn":35},{"ruleId":"174","severity":1,"message":"185","line":6,"column":10,"nodeType":"176","messageId":"177","endLine":6,"endColumn":15},{"ruleId":"174","severity":1,"message":"186","line":11,"column":8,"nodeType":"176","messageId":"177","endLine":11,"endColumn":13},{"ruleId":"174","severity":1,"message":"187","line":12,"column":8,"nodeType":"176","messageId":"177","endLine":12,"endColumn":14},{"ruleId":"174","severity":1,"message":"188","line":19,"column":8,"nodeType":"176","messageId":"177","endLine":19,"endColumn":12},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"189","replacedBy":"193"},{"ruleId":"191","replacedBy":"194"},{"ruleId":"189","replacedBy":"195"},{"ruleId":"191","replacedBy":"196"},{"ruleId":"189","replacedBy":"197"},{"ruleId":"191","replacedBy":"198"},{"ruleId":"174","severity":1,"message":"199","line":5,"column":88,"nodeType":"176","messageId":"177","endLine":5,"endColumn":97},{"ruleId":"189","replacedBy":"200"},{"ruleId":"191","replacedBy":"201"},{"ruleId":"174","severity":1,"message":"202","line":5,"column":15,"nodeType":"176","messageId":"177","endLine":5,"endColumn":21},{"ruleId":"174","severity":1,"message":"203","line":5,"column":45,"nodeType":"176","messageId":"177","endLine":5,"endColumn":56},{"ruleId":"189","replacedBy":"204"},{"ruleId":"191","replacedBy":"205"},{"ruleId":"189","replacedBy":"206"},{"ruleId":"191","replacedBy":"207"},{"ruleId":"174","severity":1,"message":"208","line":2,"column":40,"nodeType":"176","messageId":"177","endLine":2,"endColumn":48},{"ruleId":"174","severity":1,"message":"208","line":1,"column":40,"nodeType":"176","messageId":"177","endLine":1,"endColumn":48},{"ruleId":"189","replacedBy":"209"},{"ruleId":"191","replacedBy":"210"},{"ruleId":"174","severity":1,"message":"208","line":2,"column":40,"nodeType":"176","messageId":"177","endLine":2,"endColumn":48},{"ruleId":"211","severity":1,"message":"212","line":24,"column":19,"nodeType":"213","messageId":"214","endLine":24,"endColumn":21},{"ruleId":"215","severity":1,"message":"216","line":39,"column":13,"nodeType":"217","endLine":39,"endColumn":121},{"ruleId":"174","severity":1,"message":"218","line":2,"column":23,"nodeType":"176","messageId":"177","endLine":2,"endColumn":31},{"ruleId":"174","severity":1,"message":"219","line":2,"column":33,"nodeType":"176","messageId":"177","endLine":2,"endColumn":38},{"ruleId":"189","replacedBy":"220"},{"ruleId":"191","replacedBy":"221"},{"ruleId":"189","replacedBy":"222"},{"ruleId":"191","replacedBy":"223"},{"ruleId":"174","severity":1,"message":"218","line":2,"column":23,"nodeType":"176","messageId":"177","endLine":2,"endColumn":31},{"ruleId":"174","severity":1,"message":"219","line":2,"column":33,"nodeType":"176","messageId":"177","endLine":2,"endColumn":38},{"ruleId":"189","replacedBy":"224"},{"ruleId":"191","replacedBy":"225"},{"ruleId":"174","severity":1,"message":"226","line":12,"column":10,"nodeType":"176","messageId":"177","endLine":12,"endColumn":14},{"ruleId":"174","severity":1,"message":"227","line":12,"column":15,"nodeType":"176","messageId":"177","endLine":12,"endColumn":22},{"ruleId":"174","severity":1,"message":"208","line":1,"column":36,"nodeType":"176","messageId":"177","endLine":1,"endColumn":44},{"ruleId":"174","severity":1,"message":"228","line":26,"column":12,"nodeType":"176","messageId":"177","endLine":26,"endColumn":22},{"ruleId":"174","severity":1,"message":"229","line":14,"column":19,"nodeType":"176","messageId":"177","endLine":14,"endColumn":28},{"ruleId":"230","severity":1,"message":"231","line":55,"column":7,"nodeType":"232","endLine":55,"endColumn":21,"suggestions":"233"},{"ruleId":"234","severity":1,"message":"235","line":70,"column":24,"nodeType":"236","messageId":"237","endLine":70,"endColumn":26},{"ruleId":"174","severity":1,"message":"238","line":2,"column":29,"nodeType":"176","messageId":"177","endLine":2,"endColumn":38},{"ruleId":"174","severity":1,"message":"208","line":2,"column":40,"nodeType":"176","messageId":"177","endLine":2,"endColumn":48},{"ruleId":"174","severity":1,"message":"239","line":4,"column":8,"nodeType":"176","messageId":"177","endLine":4,"endColumn":13},"no-unused-vars","'Avatar' is defined but never used.","Identifier","unusedVar","'Icon' is defined but never used.","'Route' is defined but never used.","'Charts' is defined but never used.","'Dashboard' is defined but never used.","'Fade' is defined but never used.","'Authentication' is defined but never used.","'Link' is defined but never used.","'Table' is defined but never used.","'Error' is defined but never used.","'Footer' is defined but never used.","'Grid' is defined but never used.","no-native-reassign",["240"],"no-negated-in-lhs",["241"],["240"],["241"],["240"],["241"],["240"],["241"],"'Container' is defined but never used.",["240"],["241"],"'Button' is defined but never used.","'CardActions' is defined but never used.",["240"],["241"],["240"],["241"],"'useState' is defined but never used.",["240"],["241"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Checkbox' is defined but never used.","'Input' is defined but never used.",["240"],["241"],["240"],["241"],["240"],["241"],"'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'createData' is defined but never used.","'setTables' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateFunction'. Either include it or remove the dependency array.","ArrayExpression",["242"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useEffect' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"243","fix":"244"},"Update the dependencies array to be: [tables, check, updateFunction]",{"range":"245","text":"246"},[1631,1645],"[tables, check, updateFunction]"]